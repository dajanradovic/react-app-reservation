{"version":3,"sources":["actions/fetchReservations.js","form.js","slack.js","AddFacilityModal.js","reservationTable.js","App.js","welcome.js","serviceWorker.js","reducers/rootReducer.js","registerPage.js","index.js"],"names":["getAllReservations","token","dispatch","axios","get","then","response","console","log","type","reservations","data","catch","error","Form","props","handleFormInput","e","setState","name","target","value","metoda","state","showListOfDatesOnClick","prevState","showListOfDates","calculateTotalPrice","price","currentTarget","id","indexes","handleUniversalPrice","uniPrice","numberOfNights","totalPrice","confirmIndividualPrices","collect","document","querySelectorAll","collectAmount","forEach","item","text","showError","parseInt","pickReservationType","reservationType","pickApartment","apartment","openModal","storeReservation","priceError","apartmentError","reservationTypeError","fetch","method","headers","body","JSON","stringify","startDate1","endDate1","json","errors","undefined","reservationAddedSlack","setTimeout","reservationAddedSlackReset","change","universalPrice","M","window","addEventListener","elems","FormSelect","init","dates","this","inbeetween","map","index","key","className","style","backgroundColor","toDateString","class","width","marginLeft","onBlur","color","marginTop","onChange","display","defaultValue","facilities","title","verticalAlign","paddingLeft","fontDecoration","cursor","onClick","animate","appear","durationApper","React","Component","connect","startDate","endDate","nights","betweenDates","inBetweenDates","localStorage","getItem","Slack","AddFacilityModal","closeModal","handleNewFacilityName","newFacilityName","dispatchNewFacilityName","addNewFacilityToList","autoFocus","facility","ReservationTable","deleteReservation","delete","message","deleteAllReservations","post","reservationsList","a","created_at","Ä‘className","App","Difference_In_Time","getTime","Math","round","nula","dva","Array","floor","fill","_","idx","Date","setReservationDates","showForm","logOut","eraseAllData","history","push","removeItem","AutoInit","setUserData","stlogout","to","userDetails","textAlign","selectRange","fontSize","borderLeft","animation","animateClass","showSlack","userData","arrival","leave","arrivalDate","leaveDate","values","Welcome","submitLogin","loading","preventDefault","password","email","setItem","redirect","errorMessage","errorMessageContent","handleFormOnChange","openRegisterComponent","openLoginDiv","getElementById","height","closeLoginDiv","login","register","overflowY","htmlFor","marginBottom","addToken","Boolean","location","hostname","match","initState","reservationAdded","rootReducer","action","RegisterPage","submitRegistration","passwordError","passwordErrorContent","nameError","nameErrorContent","emailError","emailErrorContent","emailErrorContant","store","createStore","applyMiddleware","thunk","ReactDOM","render","exact","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.004b25cf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport const getAllReservations = (token) =>{\r\n    return (dispatch) => {\r\n\r\n        axios.get('http://127.0.0.1:8000/api/reservations?token=' + token)\r\n            .then(response => {\r\n                    console.log('bla bla');\r\n\r\n                  // console.log(response.data.data);\r\n                   dispatch({\r\n                    type: 'RESERVATION_LIST',\r\n                    reservations: response.data.data\r\n                })\r\n              \r\n            })\r\n            \r\n            .catch(error => {\r\n                console.log(error);\r\n             \r\n            });\r\n\r\n        \r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport Animate from 'animate.css-react'\r\nimport 'animate.css/animate.css'\r\nimport { connect} from 'react-redux';\r\nimport {getAllReservations} from './actions/fetchReservations';\r\n\r\n\r\n\r\n\r\n\r\nclass Form extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n          showListOfDates:false,\r\n          change:false,\r\n          universalPrice:'',\r\n          totalPrice:'',\r\n          reservationType:'',\r\n          apartment:'',\r\n          showError: false,\r\n          apartmentError:false,\r\n          reservationTypeError:false,\r\n          priceError:false,\r\n          indexes:{\r\n\r\n\r\n          }\r\n          \r\n\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      const M = window.M;\r\n      document.addEventListener('DOMContentLoaded', function() {\r\n        var elems = document.querySelectorAll('select');\r\n        var instances = M.FormSelect.init(elems, {});\r\n      });\r\n\r\n    }\r\n\r\n\r\n      handleFormInput = (e) => {\r\n       \r\n               this.setState({\r\n                   name : e.target.value\r\n                   \r\n               },this.props.metoda(this.state.name) );\r\n               \r\n\r\n      }\r\n\r\n      \r\n\r\n      showListOfDatesOnClick = () =>{\r\n\r\n\r\n                                    \r\n                                 \r\n                                      this.setState((prevState) =>{\r\n\r\n                                        return {\r\n\r\n                                          showListOfDates: !prevState.showListOfDates\r\n                                        }\r\n                                      })\r\n\r\n\r\n                                    }\r\n\r\n                                  \r\n                                  \r\n      \r\n      calculateTotalPrice = (e) => {\r\n        \r\n      let price= e.currentTarget.value;\r\n      let name = e.target.id;\r\n        \r\n        this.setState((prevState) =>{\r\n\r\n          return {\r\n\r\n            indexes: {...prevState.indexes, [name] : price}\r\n            \r\n          }\r\n        })\r\n\r\n      }\r\n\r\n      handleUniversalPrice = (e) => {\r\n\r\n        let uniPrice = e.currentTarget.value * this.props.numberOfNights;\r\n\r\n            this.setState({\r\n                  totalPrice : uniPrice\r\n\r\n            })\r\n      }\r\n\r\n      confirmIndividualPrices = (e) =>{\r\n\r\n        let collect = document.querySelectorAll('.listItem');\r\n        console.log(collect);\r\n        let collectAmount=0;\r\n        collect.forEach(item =>{\r\n\r\n          console.log(item.text);\r\n            if (item.value ==''){\r\n\r\n            this.setState({\r\n              showError : true\r\n\r\n        })\r\n      }\r\n\r\n      else{\r\n          \r\n        collectAmount=parseInt(collectAmount) + parseInt(item.value);\r\n        this.setState({\r\n          showError : false,\r\n          totalPrice: collectAmount\r\n\r\n    })\r\n\r\n      }\r\n\r\n        })\r\n\r\n       \r\n        \r\n\r\n\r\n        \r\n      }\r\n\r\n      pickReservationType = (e) =>{\r\n\r\n        this.setState({\r\n\r\n          reservationType: e.target.value\r\n        })\r\n      }\r\n\r\n      pickApartment = (e) =>{\r\n\r\n        this.setState({\r\n\r\n          apartment: e.target.value\r\n        })\r\n      }\r\n\r\n      openModal =() =>{\r\n\r\n          this.props.openModal();\r\n\r\n      }\r\n      \r\n      storeReservation = ()=>{\r\n\r\n       this.setState({\r\n\r\n        priceError: false,\r\n        apartmentError: false,\r\n        reservationTypeError:false\r\n       })\r\n        \r\n\r\n\r\n        fetch('http://127.0.0.1:8000/api/reservations??token=' + this.props.token, {\r\n          method: 'POST', \r\n        \r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            \r\n                \"startDate\": this.props.startDate1,\r\n                \"endDate\" : this.props.endDate1,\r\n                \"price\": this.state.totalPrice,\r\n                \"numberOfNights\": this.props.numberOfNights,\r\n                \"apartment\": this.state.apartment,\r\n                \"reservationType\":this.state.reservationType\r\n\r\n\r\n          }),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data.errors);\r\n          if (data.errors !=undefined){\r\n\r\n            if(data.errors.price){\r\n              \r\n              this.setState({\r\n\r\n                priceError: true\r\n              })\r\n              \r\n            }\r\n            if(data.errors.apartment){\r\n              \r\n              this.setState({\r\n\r\n                apartmentError: true\r\n              })\r\n              \r\n            }\r\n\r\n            if(data.errors.reservationType){\r\n              \r\n              this.setState({\r\n\r\n                reservationTypeError: true\r\n              })\r\n              \r\n            }\r\n\r\n          \r\n\r\n          \r\n          }\r\n\r\n          else{\r\n            this.props.reservationAddedSlack();\r\n            setTimeout(()=>{\r\n              console.log('omda');\r\n                this.props.reservationAddedSlackReset();\r\n  \r\n            }, 4000)\r\n\r\n            this.props.getAllReservations(this.props.token);\r\n\r\n\r\n          }\r\n         \r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n        });\r\n\r\n      }\r\n      \r\n\r\n  render(){\r\n\r\n    let dates= this.props.inbeetween.map((item, index) =>{\r\n      return <li key={index} className=\"collection-item\" style={{backgroundColor: \"#b2dfdb\"}}> {item.toDateString()} <p>Price for this night: <input class=\"priceInput right-align listItem\" style={{width:\"70px\", marginLeft:\"10px\" }} id={item.toDateString()} onBlur={this.calculateTotalPrice}  type=\"number\"  /></p></li>\r\n    });\r\n   \r\n    return (\r\n  <div >\r\n\r\n               \r\n        <div className=\"surrounding lime accent-1\">\r\n                <h6>Arrival date:</h6>\r\n                  <p style={{backgroundColor: \"black\", color:\"white\"}}>{this.props.startDate1}</p>\r\n\r\n                <h6>Leave date</h6>\r\n                <p style={{backgroundColor: \"black\", color:\"white\"}}>{this.props.endDate1}</p>\r\n        </div>\r\n         <div className=\"surrounding\"  style={{marginTop:\"10px\"}}>\r\n                    <select  value={this.state.reservationType} onChange={this.pickReservationType} className=\"icons\" id=\"ze\">\r\n                    <option value='' >Choose reservation type</option>\r\n                    <option value=\"Private guest\"  className=\"left\">Private guest</option>\r\n                    <option value=\"Booking.com\"  className=\"left\">Booking.com</option>\r\n                    <option value=\"Airbnb.com\"  className=\"left\">Airbnb.com</option>\r\n                  </select>\r\n                  {this.state.reservationTypeError && <p className=\"red-text\">You need to fill this field </p>}\r\n          </div>\r\n          <div className=\"surrounding\" >\r\n                  <select value={this.state.apartment} style={{display:\"inline-block\", width:\"90%\"}} onChange={this.pickApartment} defaultValue=\"daj\"className=\"icons\" id=\"ze\">\r\n                    <option>Choose your apartment</option>\r\n                    {this.props.facilities.map((item, index)=>{\r\n      \r\n      return <option  value={item} className=\"left\">{item}</option> \r\n    })}\r\n                  </select><i title=\"add another facility\" className=\"material-icons\" style={{display:\"inline-block\", width:\"10%\", verticalAlign:\"middle\", paddingLeft:\"10px\", color:\"green\", fontDecoration:\"bold\", cursor:\"pointer\"}} onClick={this.openModal}>add</i>\r\n                  {this.state.apartmentError && <p className=\"red-text\">You need to fill this field </p>}\r\n\r\n     </div>\r\n\r\n       <div className=\"surrounding lime accent-1\" style={{marginTop:\"10px\"}}>\r\n                <p >Total nigths: {this.props.numberOfNights}</p>\r\n                <span>Price (equal for all nights): <input className=\"priceInput\" style={{width:\"70px\", marginLeft:\"10px\"}}  type=\"number\" onChange={this.handleUniversalPrice}  /></span>\r\n                {this.state.priceError && <p className=\"red-text\">You need to fill this field </p>}\r\n\r\n                <a style={{display:\"block\", width:\"200px\"}} className=\"waves-effect waves-light btn-small\" onClick={this.showListOfDatesOnClick}>Set individual prices for each night</a>\r\n                \r\n                      {this.state.showListOfDates &&\r\n                             <Animate\r\n                                 animate={true}\r\n                                // animateChangeIf={this.state.change}     \r\n                                 appear=\"slideInDown\"\r\n                                 //change=\"fadeOutUp\"\r\n                                 durationApper={800}\r\n                                \r\n                                \r\n                                \r\n                                 >\r\n                                             \r\n                                            \r\n                                      <ul className=\"collection\" id=\"listaMeduDatuma\">\r\n                                        {dates}\r\n                                        \r\n                                        <button class=\"red lighten-2 btn-small\" onClick={this.confirmIndividualPrices}>Confirm individual prices</button>\r\n\r\n                                       </ul>\r\n                  \r\n                                     \r\n\r\n                                              </Animate>\r\n                                                          }\r\n               \r\n              \r\n\r\n                        \r\n                        <h6>Total price: <span>{this.state.totalPrice}</span></h6>\r\n                        </div>\r\n                        <button onClick={this.storeReservation} className=\"btn waves-effect waves-light\" style={{marginTop:\"10px\"}}  name=\"action\">Confirm reservation<i className=\"small material-icons\" id=\"submitArrow\">send</i>\r\n                      </button>\r\n    </div>\r\n    \r\n  \r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n  return{\r\n      startDate: state.startDate,\r\n      endDate: state.endDate,\r\n      nights: state.nights,\r\n      betweenDates: state.inBetweenDates,\r\n      facilities: state.facilities,\r\n      token: localStorage.getItem('token'),\r\n\r\n\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return{\r\n        reservationAddedSlack: () =>{dispatch({type: 'RESERVATION_ADDED_SLACK'})},\r\n        reservationAddedSlackReset: () =>{dispatch({type: 'RESERVATION_ADDED_SLACK_RESET'})},\r\n        openModal:()=>{dispatch({type: 'OPEN_MODAL'})},\r\n        getAllReservations: (token) =>{dispatch(getAllReservations(token))}\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\n\r\nclass Slack extends React.Component {\r\n     \r\n    constructor(props){\r\n          super(props);\r\n          this.state = {\r\n         \r\n          \r\n\r\n      }\r\n    \r\n\r\n    }  \r\n  render(){\r\n\r\n    return(\r\n\r\n    <div className=\"slack\" >\r\n        You reservation has been successfully added!\r\n\r\n    </div>\r\n    )\r\n  \r\n  \r\n}\r\n}\r\n\r\nexport default Slack;\r\n","import React, {Component} from 'react';\r\nimport { connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass AddFacilityModal extends React.Component {\r\n     \r\n    constructor(props){\r\n          super(props);\r\n       \r\n            this.state={\r\n\r\n              newFacilityName:''\r\n            }\r\n         \r\n          \r\n\r\n      }\r\n\r\n  closeModal = () =>{\r\n\r\n    this.props.closeModal();\r\n  }\r\n\r\n  handleNewFacilityName = (e) =>{\r\nthis.setState({\r\n\r\n  newFacilityName: e.target.value\r\n});\r\n\r\n \r\n}    \r\n\r\ndispatchNewFacilityName = ()=>{\r\n  this.props.addNewFacilityToList(this.state.newFacilityName);\r\n\r\n  this.props.closeModal();\r\n\r\n}\r\n\r\n    \r\n  render(){\r\n\r\n    return(\r\n\r\n      <div id=\"myModal1\" className=\"modal1\">\r\n\r\n\r\n<div className=\"modal-content1\">\r\n<div className=\"modal-header1\">\r\n    <span className=\"close1\" onClick={this.closeModal}>&times;</span>\r\n    <h5>Please add a new facility, room, apartment name</h5>\r\n  </div>\r\n  <div className=\"modal-body1\">\r\n    \r\n    <input onChange={this.handleNewFacilityName} style={{display:\"inline-block\", width:\"85%\"}} type=\"text\" name=\"newFacility\" autoFocus />  <button onClick={this.dispatchNewFacilityName} style={{display:\"inline-block\", marginLeft:\"10px\"}} className=\"btn-small waves-effect waves-light\"  name=\"action\">Add<i className=\"small material-icons\" id=\"submitArrow\">send</i></button>\r\n  </div>\r\n  \r\n</div>\r\n   \r\n\r\n</div>\r\n\r\n    )\r\n  \r\n  \r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return{\r\n        \r\n        closeModal :()=>{dispatch({type: 'CLOSE_MODAL'})},\r\n        addNewFacilityToList:(facility)=>{dispatch({type: 'ADD_NEW_FACILITY_TO_LIST', newFacilityName : facility })}\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(AddFacilityModal);\r\n","import React, {Component} from 'react';\r\nimport { connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {getAllReservations} from './actions/fetchReservations';\r\n\r\n\r\n\r\n\r\n\r\nclass ReservationTable extends React.Component {\r\n     \r\n    constructor(props){\r\n          super(props);\r\n          this.state = {\r\n                \r\n          \r\n\r\n      }\r\n    \r\n\r\n    }  \r\n\r\n    componentDidMount(){\r\n\r\n      console.log('will mount');\r\n     this.props.getAllReservations(this.props.token);\r\n        \r\n      }\r\n\r\n    deleteReservation = (id)=>{\r\n      axios.delete('http://127.0.0.1:8000/api/reservations/'+id+'?token=' +this.props.token)\r\n        .then(response => {\r\n        \r\n          this.props.getAllReservations(this.props.token);\r\n      \r\n      })\r\n      \r\n      .catch(error => {\r\n    \r\n           console.log(error.response.data.message);\r\n         \r\n      });\r\n\r\n\r\n    }\r\n\r\n\r\n    deleteAllReservations = () =>{\r\n\r\n      axios.post('http://127.0.0.1:8000/api/reservations/deleteAll?token=' +this.props.token)\r\n      .then(response => {\r\n      \r\n        this.props.getAllReservations(this.props.token);\r\n    \r\n    })\r\n    \r\n    .catch(error => {\r\n  \r\n         console.log(error.response.data.message);\r\n       \r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n    \r\n  render(){\r\n    \r\n       const reservations= this.props.reservationsList.map(a =>{\r\n              return a.map((item, index) =>{\r\n\r\n               return      <tr key={index} >\r\n                           <td>{index +1}</td>\r\n\r\n                          <td>{item.startDate}</td>\r\n                          <td>{item.endDate}</td>\r\n                          <td>{item.apartment}</td>\r\n                          <td>{item.reservationType}</td>\r\n                          <td>{item.numberOfNights}</td>\r\n                          <td>{item.price}</td>\r\n                          <td>{item.created_at}<i style={{cursor:\"pointer\"}} title=\"delete\" onClick={ () => this.deleteReservation(item.id)} id=\"garbageIcon\" className=\"material-icons right\">delete</i></td>\r\n                          </tr>\r\n               })\r\n                  \r\n\r\n               \r\n          \r\n\r\n\r\n           })\r\n          \r\n         \r\n     \r\n  \r\n\r\n\r\n    \r\n\r\n    return(\r\n\r\n      \r\n      <div className=\"clearfix\">\r\n        \r\n       \r\n       \r\n        <table Ä‘className=\"tabel-responsive\">\r\n        <thead>\r\n          <tr>\r\n               <th>#</th>\r\n              <th>Arrival</th>\r\n              <th>Departure</th>\r\n              <th>Apartment</th>\r\n              <th>Source</th>\r\n              <th>Number of nights</th>\r\n              <th>Price</th>\r\n              <th>Date added</th>\r\n\r\n\r\n\r\n\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n\r\n          {reservations}\r\n          \r\n        </tbody>\r\n      </table>\r\n      <a id=\"deleteAllButton\" onClick={this.deleteAllReservations} className=\"red accent-4 btn-small right\">Delete all reservations</a>\r\n        \r\n\r\n\r\n      </div>\r\n      \r\n    )\r\n  \r\n  \r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\r\n    return{\r\n       \r\n        token: localStorage.getItem('token'),\r\n        reservationsList: state.reservations\r\n        \r\n\r\n      \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return{\r\n        getAllReservations: (token) =>{dispatch(getAllReservations(token))},\r\n        \r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReservationTable);;\r\n","\nimport React, {Component} from 'react';\nimport { connect} from 'react-redux';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport DatePicker from  \"react-datepicker\";\nimport Animate from 'animate.css-react'\nimport 'animate.css/animate.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"./form.js\";\nimport Slack from \"./slack.js\";\nimport AddFacilityModal from \"./AddFacilityModal.js\"\nimport { findRenderedComponentWithType } from 'react-dom/test-utils';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport ReservationTable from './reservationTable';\nimport {getAllReservations} from './actions/fetchReservations';\n\n\n\n\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n   this.state={\n  \n    showForm: false\n   \n     \n    }\n\n}\n\ncomponentWillUnmount(){\n\n  localStorage.removeItem(\"token\");\n}\n\n\ncomponentDidMount(){\n  console.log('u comoponentdidmount sam');\n  M.AutoInit();\n  this.props.getAllReservations(this.props.token);\n\n\n  axios.get('http://127.0.0.1:8000/api/getUser?token=' + this.props.token)\n              .then(response => {\n                console.log(response.data);\n                this.props.setUserData(response.data);\n\n                     \n\n                \n              })\n              \n              .catch(error => {\n                  console.log(error);\n               \n              });\n\n     \n\n\n}\n\n\n\nonChange = (value) => {\n\n  \n       \n        console.log(value);\n        var Difference_In_Time = value[1].getTime() - value[0].getTime();\n        var numberOfNights = Math.round(Difference_In_Time / (1000 * 3600 * 24))-1;\n       \n        let nula = value[0].toDateString();\n        let dva = value[1].toDateString();\n       \n      let inBetweenDates=  Array(Math.floor((value[1] - value[0]) / 86400000)).fill().map((_, idx) => (new Date(value[0].getTime() + idx * 86400000)))\n\n\n  \n  this.props.setReservationDates(nula, dva, numberOfNights, inBetweenDates);\n     \n  this.setState({\n\n          //startDate: nula,\n         // endDate:  dva,\n          showForm: true\n\n  })\n\n\n \n}\n\nlogOut = () =>{\n\n  axios.get('http://127.0.0.1:8000/api/logout?token=' + this.props.token)\n              .then(response => {\n                console.log(response.data);\n               \n                this.props.eraseAllData();\n             //   \n\n                this.props.history.push('/');\n                     \n\n                \n              })\n              \n              .catch(error => {\n                  console.log(error);\n               \n              });\n\n\n\n\n}\n\n\n\n  render(){\n     if(this.stlogout==true) return <Redirect to=\"/\"></Redirect>\n    if(this.props.token=='') return <Redirect to=\"/register\"></Redirect>\n\n    return (\n    <div>\n\n     \n    <div className=\"teal lighten-2\">\n    <div id=\"headerDiv\" className=\"row yellow darken-1\">\n      <div  className=\"col s12\">\n        <div className=\"flex-container\">\n        <h5>Hi,  {this.props.userDetails.name}</h5><div id=\"crtaa\"></div><h6 id=\"logOut\" onClick={this.logOut} title=\"log out\" style={{cursor:\"pointer\"}}className=\"valign-wrapper\" >Log-out  <i  className=\"small material-icons\" style={{paddingLeft: \"10px\"}}>exit_to_app</i></h6>\n        </div>\n        <h1 id=\"reservationsHeaderTitle\">Arrange your reservations</h1>\n      </div>\n      \n   \n    </div>\n    </div>\n   \n    \n\n\n    <div className=\"row\">\n          <div className=\"col s12\">\n                <ul className=\"collapsible  yellow darken-1\">\n                       <li>\n                          <div className=\"collapsible-header\"><i className=\"material-icons\">add</i>Add new reservation</div>\n                               \n                               <div className=\"collapsible-body\">\n                                     <div className=\"row\">\n                                          <div className=\"col s8 tabletClass\" style={{textAlign: \"center\"}}>\n          \n                                                  <Calendar  className=\"customCalendar\" onChange={this.onChange}\n                      \n                                                     selectRange={true}></Calendar>\n                                                     <span id=\"belowCalendarLabel\"style={{fontSize: \"12px\"}}>* select start and end reservatin date to select a range</span>\n                                          </div>\n                                          \n                                          <div className=\"col m4 s12 forma\" style={{width: \"400px\", borderLeft:\"1px solid black\"}}>\n\n\n                                        \n                                         {this.state.showForm &&\n                                           <Animate\n                                           animation={true}\n                                         \n                                          appear=\"slideInRight\"\n                                          durationApper={700}\n                                             \n                                             >\n                                            <Form inbeetween={this.props.betweenDates} numberOfNights={this.props.nights} animateClass={this.state.showForm} startDate1={this.props.startDate} endDate1={this.props.endDate}></Form> \n                                          \n                                          \n                                              </Animate>\n                                            }\n                                          \n \n                                        \n                                    </div>\n                                                   \n                                                   \n                                         \n                                              \n                                               \n\n                                                             \n\n       \n                                             </div>\n        \n                                      \n                                </div>\n                        </li>\n                   </ul>\n                   {this.props.showSlack && <Slack > </Slack>}\n\n\n                   <ul className=\"collapsible  yellow darken-1\">\n                       <li>\n                          <div className=\"collapsible-header\"><i className=\"material-icons\">add</i>View reservation list</div>\n                               \n                               <div className=\"collapsible-body\" id=\"collapsibleTable\" >\n                                 {this.props.reservationsList==''? (<p>no reservations</p>):\n                                 (\n                              <ReservationTable />\n                              )\n                                 }\n                                </div>\n                          </li>\n                    </ul>\n\n              \n             </div>\n          \n         </div>\n\n  \n  \n     \n    {this.props.openModal &&\n        <AddFacilityModal></AddFacilityModal>}\n    </div>\n    \n  );\n\n}\n}\n\n\nconst mapStateToProps = (state) =>{\n\n          return{\n              startDate: state.startDate,\n              endDate: state.endDate,\n              nights: state.nights,\n              betweenDates: state.inBetweenDates,\n              showSlack: state.showSlack,\n              openModal: state.openModal,\n              token: localStorage.getItem('token'),\n              userDetails:state.userData,\n              reservationsList: state.reservations\n\n\n            \n          }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n\n          return{\n                setReservationDates: (arrival, leave, numberOfNights, inBetweenDates) =>{dispatch({type: 'SET_RESERVATION_DATES', arrivalDate: arrival, leaveDate: leave, nights: numberOfNights, betweenDates: inBetweenDates})},\n                setUserData: (values) =>{dispatch({type: 'SET_USER_DATA', data:values})},\n                getAllReservations: (token) =>{dispatch(getAllReservations(token))},\n                eraseAllData: () =>{dispatch({type: 'RESET_DATA'})},\n\n\n          }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React, {Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Welcome extends React.Component {\r\n     \r\n    constructor(props){\r\n          super(props);\r\n          this.state = {\r\n              login:false,\r\n              register:false,\r\n              password:'',\r\n              email:'',\r\n              errorMessageContent:'',\r\n              errorMessage:false,\r\n              redirect:false,\r\n              loading:false,\r\n\r\n              \r\n          \r\n\r\n      }\r\n    \r\n\r\n    }  \r\n\r\n\r\n    submitLogin=(e)=>{\r\n        this.setState({\r\n\r\n\r\n          loading: true\r\n        })\r\n      e.preventDefault();\r\n      axios.post('http://127.0.0.1:8000/api/login', {\r\n          password: this.state.password,\r\n          email:this.state.email\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          \r\n         \r\n       \r\n\r\n\r\n\r\n\r\n          \r\n        }).then(response=>{\r\n\r\n          this.setState({\r\n            loading:false,\r\n            redirect:true\r\n           })\r\n        })\r\n        \r\n        .catch(error => {\r\n      \r\n                this.setState({\r\n                  loading:false,\r\n                  errorMessage:true,\r\n                  errorMessageContent:error.response.data.message\r\n                })\r\n                          \r\n\r\n         \r\n        });\r\n\r\n       \r\n        \r\n\r\n}\r\n\r\n    handleFormOnChange= (e) =>{\r\n\r\n\r\n      if(e.target.name == 'password'){\r\n\r\n            this.setState({\r\n\r\n          password:e.target.value\r\n      })\r\n  }\r\n\r\n       if(e.target.name == 'email'){\r\n\r\n              this.setState({\r\n\r\n                email:e.target.value\r\n      })\r\n  }\r\n      \r\n  \r\n  }\r\n\r\n  openRegisterComponent = () =>{\r\n\r\n    this.props.history.push('/register');\r\n\r\n  }\r\n\r\n    openLoginDiv =() =>{\r\n\r\n     \r\n        document.getElementById(\"mySidenav\").style.height = \"250px\";\r\n        document.getElementById(\"darken\").style.backgroundColor = \"rgba(0,0,0,0.4)\";\r\n     \r\n    }\r\n\r\n    closeLoginDiv =() =>{\r\n\r\n     \r\n      document.getElementById(\"mySidenav\").style.height =\"0px\";\r\n      document.getElementById(\"darken\").style.backgroundColor = \"\";\r\n   \r\n  }\r\n\r\n  render(){\r\n    if (this.state.redirect == true) {\r\n      return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    if (this.state.register == true) {\r\n      return <Redirect to='/register' />\r\n    }\r\n\r\n    return(\r\n\r\n      <div  style={{overflowY:\"hidden\"}}>\r\n      <div id=\"pictureDiv\">\r\n        <div id=\"darken\">\r\n          </div>\r\n     \r\n\r\n\r\n      </div>\r\n\r\n      <div id=\"welcomeText\">\r\n       Welcome,\r\n        please register or login to start managing your reservations\r\n      </div>\r\n      <div className=\"button-group\">\r\n      <a onClick={this.openLoginDiv} className=\"waves-effect waves-light btn-large buttons lime accent-2\">Log-in</a>\r\n      <a className=\"waves-effect waves-light btn-large buttons\" onClick={this.openRegisterComponent}>Register</a>\r\n\r\n      </div>\r\n      <div id=\"mySidenav\">\r\n      <a  className=\"closebtn\" onClick={this.closeLoginDiv}>&times;</a>\r\n      <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                  <h6 style={{marginTop:\"30px\"}}>Enter your login data</h6>\r\n                  </div>\r\n                  </div>\r\n           \r\n                <div className=\"row\">\r\n                <div className=\"col s8\">\r\n                <form >\r\n                     \r\n                          <div className=\"input-field col s12\" style={{marginLeft:\"10px\"}}>\r\n                          <i className=\"material-icons prefix\">email</i>\r\n\r\n                            <input style={{color:\"white\"}}id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleFormOnChange} className=\"validate\" />\r\n                           <label className=\"loginLabel\" htmlFor=\"email\">Email</label>\r\n                          \r\n\r\n                       \r\n\r\n                    \r\n                     </div>\r\n\r\n                   \r\n                         <div className=\"input-field col s12\" style={{marginLeft:\"10px\"}}>\r\n                         <i className=\"material-icons prefix\">lock</i>\r\n                         <input style={{color:\"white\"}} id=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleFormOnChange} className=\"validate\" />\r\n                          <label className=\"loginLabel\"htmlFor=\"password\">Password</label>\r\n                          {this.state.errorMessage &&  <span id=\"loginErrorText\" style={{color:\"red\"}}>{this.state.errorMessageContent}</span>}\r\n                  \r\n                        \r\n\r\n                     </div>\r\n\r\n                     </form>\r\n                     </div>\r\n                     <div className=\"col s4\" style={{marginBottom:\"20px\"}}>\r\n                           <button id=\"loginDivbutton\" onClick={this.submitLogin} style={{width:\"70%\", height:\"50px\", marginTop:\"95px\", marginLeft:\"30px\"}}className=\"waves-effect waves-light btn\">Log in</button>\r\n                          {this.state.loading ? <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div> : ''}\r\n\r\n                            </div>\r\n                          \r\n                  </div>\r\n                  \r\n                  \r\n        \r\n      </div>\r\n      \r\n      \r\n\r\n    </div>\r\n        \r\n\r\n   \r\n    )\r\n  \r\n  \r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return{\r\n        addToken: (value) =>{dispatch({type: 'ADD_TOKEN', token:value})},\r\n      \r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Welcome);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState={\r\n\r\n    startDate:'',      \r\n     endDate:'',\r\n     reservationAdded: false,\r\n     showSlack:false,\r\n     openModal:false,\r\n     token:localStorage.getItem(\"token\"),\r\n     facilities: [\"Studio\", \"Apartment 4+0\"],\r\n     userData:{},\r\n     reservations:[] \r\n\r\n}\r\n\r\n\r\nconst rootReducer = (state = initState, action) =>{\r\n    console.log(action);\r\n\r\n            if (action.type === 'SET_RESERVATION_DATES'){\r\n\r\n               return{\r\n                    ...state,\r\n                    startDate: action.arrivalDate,\r\n                    endDate: action.leaveDate,\r\n                    nights: action.nights,\r\n                    inBetweenDates: action.betweenDates\r\n                    \r\n\r\n               } \r\n            }\r\n\r\n            if (action.type === 'RESERVATION_ADDED_SLACK'){\r\n\r\n                return{\r\n                     ...state,\r\n                     showSlack: true,\r\n                     \r\n \r\n                } \r\n             }\r\n\r\n             if (action.type === 'RESERVATION_ADDED_SLACK_RESET'){\r\n\r\n                return{\r\n                     ...state,\r\n                     showSlack : false\r\n \r\n                } \r\n             }\r\n\r\n             if (action.type === 'OPEN_MODAL'){\r\n\r\n               return{\r\n                    ...state,\r\n                    openModal : true\r\n\r\n               } \r\n            }\r\n\r\n\r\n            if (action.type === 'CLOSE_MODAL'){\r\n\r\n               return{\r\n                    ...state,\r\n                    openModal : false\r\n\r\n               } \r\n            }\r\n\r\n            if (action.type === 'ADD_NEW_FACILITY_TO_LIST'){\r\n                   \r\n               return{\r\n                    ...state,\r\n                    facilities : [...state.facilities,  action.newFacilityName]\r\n\r\n               } \r\n            }\r\n\r\n            if (action.type === 'ADD_TOKEN'){\r\n              \r\n          return{\r\n               ...state,\r\n               token:action.token\r\n\r\n          } \r\n       }\r\n\r\n       if (action.type === 'SET_USER_DATA'){\r\n            console.log(action);\r\n              \r\n          return{\r\n               ...state,\r\n               userData : ({},  {...action.data})\r\n\r\n          } \r\n       }\r\n\r\n       if (action.type === 'RESERVATION_LIST'){\r\n          //console.log(action);\r\n            \r\n        return{\r\n             ...state,\r\n             reservations:[action.reservations]\r\n\r\n        } \r\n     }\r\n\r\n     if (action.type === 'RESET_DATA'){\r\n          //console.log(action);\r\n            \r\n        state=initState;\r\n     }\r\n\r\n\r\n    return state;\r\n} \r\n\r\nexport default rootReducer;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect} from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RegisterPage extends React.Component {\r\n     \r\n    constructor(props){\r\n          super(props);\r\n          this.state = {\r\n                name:'',\r\n                email:'',\r\n                password:'',\r\n                passwordError:false,\r\n                emailError:false,\r\n                nameError:false,\r\n                passwordErrorContent:'',\r\n                nameErrorContent:'',\r\n                emailErrorContant:'',\r\n                redirect:false,\r\n                emailError:false,\r\n                passwordError:false\r\n\r\n          \r\n\r\n      }\r\n    \r\n    }  \r\n\r\n    handleFormOnChange= (e) =>{\r\n\r\n\r\n        if(e.target.name == 'name'){\r\n\r\n            this.setState({\r\n\r\n            name:e.target.value\r\n        })\r\n    }\r\n\r\n        if(e.target.name == 'password'){\r\n\r\n              this.setState({\r\n\r\n            password:e.target.value\r\n        })\r\n    }\r\n\r\n         if(e.target.name == 'email'){\r\n\r\n                this.setState({\r\n\r\n                  email:e.target.value\r\n        })\r\n    }\r\n        \r\n    \r\n    }\r\n\r\n\r\n    submitRegistration=(e)=>{\r\n        \r\n            e.preventDefault();\r\n            axios.post('http://127.0.0.1:8000/api/register', {\r\n                name: this.state.name,\r\n                password: this.state.password,\r\n                email:this.state.email\r\n              })\r\n              .then(response => {\r\n                console.log(response.data);\r\n                this.props.addToken(response.data.token);\r\n               \r\n               this.setState({\r\n\r\n                redirect:true\r\n               })\r\n\r\n\r\n\r\n\r\n                \r\n              })\r\n              \r\n              .catch(error => {\r\n                    \r\n                        \r\n                  /* let  errorContentPassword= error.response.data.errors.password[0] !='' ? error.response.data.errors.password[0] : '';\r\n                   let  errorContentName= error.response.data.errors.name[0] !='' ? error.response.data.errors.name[0] : '';\r\n                   let  errorContentEmail= error.response.data.errors.email[0] !='' ? error.response.data.errors.email[0] : '';*/\r\n                     for ( var item in error.response.data.errors) {\r\n                                console.log(item);\r\n                                if (item=='password'){\r\n                                    this.setState({\r\n                                        passwordError: true,\r\n                                        passwordErrorContent: error.response.data.errors.password[0]\r\n\r\n                                            })\r\n                                        }\r\n                                        if (item == 'name'){\r\n                                            this.setState({\r\n                                                nameError: true,\r\n                                                nameErrorContent: error.response.data.errors.name[0]\r\n        \r\n                                                    })\r\n                                                }\r\n\r\n                                         if (item=='email'){\r\n                                                    this.setState({\r\n                                                        emailError: true,\r\n                                                        emailErrorContent: error.response.data.errors.email[0]\r\n                \r\n                                                            })\r\n                                                        }\r\n\r\n                                    }\r\n\r\n               \r\n              });\r\n\r\n              \r\n\r\n    }\r\n\r\n  render(){\r\n    if (this.state.redirect == true) {\r\n        return <Redirect to='/dashboard' />\r\n      }\r\n\r\n    return(\r\n        <div id=\"background\">\r\n            <div className=\"row\">\r\n              \r\n                <form id=\"formDesign\" className=\"col m4 offset-m4  col s10 offset-s1 lime accent-2\">\r\n                <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <h4 style={{textAlign: \"center\"}}>Register your profile</h4>\r\n                </div>\r\n                </div>\r\n                         <div className=\"row\">\r\n\r\n                         <div className=\"input-field col s12\">\r\n                         <i className=\"material-icons prefix\">account_circle</i>\r\n                         <input  id=\"first_name\" name=\"name\" value={this.state.name} type=\"text\" onChange={this.handleFormOnChange} className=\"validate\" />\r\n                         <label htmlFor=\"first_name\">First Name</label>\r\n                         {this.state.nameError &&  <span style={{color:\"red\"}}>{this.state.nameErrorContent}</span>}\r\n\r\n                     </div>\r\n                     </div>\r\n\r\n                    <div className=\"row\">\r\n                         <div className=\"input-field col s12\">\r\n                         <i className=\"material-icons prefix\">lock</i>\r\n                         <input id=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleFormOnChange} className=\"validate\" />\r\n                          <label htmlFor=\"password\">Password</label>\r\n                        {this.state.passwordError &&  <span style={{color:\"red\"}}>{this.state.passwordErrorContent}</span>}\r\n                     </div>\r\n                     </div>\r\n\r\n                     <div className=\"row\">\r\n                          <div className=\"input-field col s12\">\r\n                          <i className=\"material-icons prefix\">email</i>\r\n\r\n                            <input id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleFormOnChange} class=\"validate\" />\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           {this.state.emailError &&  <span style={{color:\"red\"}}>{this.state.emailErrorContent}</span>}\r\n\r\n                     </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                        <button className=\"btn waves-effect waves-light\" id=\"registerButton\" onClick={this.submitRegistration} type=\"submit\">Submit\r\n                         <i className=\"material-icons right\">send</i>\r\n                        </button>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n               \r\n\r\n                    </form>\r\n            </div>\r\n            </div>\r\n   \r\n    )\r\n  \r\n  \r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n    return{\r\n          addToken: (value) =>{dispatch({type: 'ADD_TOKEN', token:value})},\r\n        \r\n  \r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  export default connect(null, mapDispatchToProps)(RegisterPage);\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Welcome from './welcome.js'\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport RegisterPage from \"./registerPage.js\";\nimport 'materialize-css/dist/css/materialize.min.css'\nimport thunk from 'redux-thunk';\n\nimport 'animate.css/animate.css'\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\n\nReactDOM.render(\n  \n        <Provider store={store}>\n          <BrowserRouter>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/dashboard\" component={App} />\n\n        \n        </BrowserRouter>\n        \n        </Provider>,\n   \n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}